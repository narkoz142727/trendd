// Bu Pine Script™ kodu, https://mozilla.org/MPL/2.0/ adresinde bulunan Mozilla Kamu Lisansı 2.0 hükümlerine tabidir.
// © Traderxprox
const int MAX_LINES_COUNT = 100
//@version=5
indicator("Trendlerv6", overlay=true, max_lines_count=MAX_LINES_COUNT)
ustsiniryuzde_1h = input.float(0.90, "1 Saatlik Trend Üst Sınır %", minval=0.01, maxval=16.0, step=0.01, group="Trend Ayarları")
altsiniryuzde_1h = input.float(0.02, "1 Saatlik Trend Alt Sınır %", minval=0.01, maxval=5.0, step=0.01, group="Trend Ayarları")

ustsiniryuzde_2h = input.float(1.0, "2 Saatlik Trend Üst Sınır %", minval=0.01, maxval=16.0, step=0.01, group="Trend Ayarları")
altsiniryuzde_2h = input.float(0.02, "2 Saatlik Trend Alt Sınır %", minval=0.01, maxval=5.0, step=0.01, group="Trend Ayarları")

ustsiniryuzde_4h = input.float(1.30, "4 Saatlik Trend Üst Sınır %", minval=0.01, maxval=16.0, step=0.01, group="Trend Ayarları")
altsiniryuzde_4h = input.float(0.02, "4 Saatlik Trend Alt Sınır %", minval=0.01, maxval=5.0, step=0.01, group="Trend Ayarları")

ustsiniryuzde_1d = input.float(2.0, "Günlük Trend Üst Sınır %", minval=0.01, maxval=16.0, step=0.01, group="Trend Ayarları")
altsiniryuzde_1d = input.float(0.02, "Günlük Trend Alt Sınır %", minval=0.01, maxval=5.0, step=0.01, group="Trend Ayarları")

ustsiniryuzde_1w = input.float(4.0, "Haftalık Trend Üst Sınır %", minval=0.01, maxval=16.0, step=0.01, group="Trend Ayarları")
altsiniryuzde_1w = input.float(0.02, "Haftalık Trend Alt Sınır %", minval=0.01, maxval=5.0, step=0.01, group="Trend Ayarları")
ustsiniryuzde = timeframe.period == "W" ? ustsiniryuzde_1w : (timeframe.period == "D" ? ustsiniryuzde_1d : (timeframe.period == "240" ? ustsiniryuzde_4h : (timeframe.period == "120" ? ustsiniryuzde_2h : (timeframe.period == "60" ? ustsiniryuzde_1h : ustsiniryuzde_1h))))
altsiniryuzde = timeframe.period == "W" ? altsiniryuzde_1w : (timeframe.period == "D" ? altsiniryuzde_1d : (timeframe.period == "240" ? altsiniryuzde_4h : (timeframe.period == "120" ? altsiniryuzde_2h : (timeframe.period == "60" ? altsiniryuzde_1h : altsiniryuzde_1h))))

up_line = input.bool(true, "Yükselen Trendleri Göster", group="Yükselen Trend Çizgi Ayarları")
int tup_numberOfLines = input.int(10, "Yükselen Son Kaç Trend?", group="Yükselen Trend Çizgi Ayarları", minval=1, maxval=20, step=1)
tup_cizgicolor = input.color(color.orange, "Yükselen Trend Çizgi Rengi", group="Yükselen Trend Çizgi Ayarları")
up_etiket = input.bool(false, "Yükselen trend çizgi %'sini Göster")
up_labeltextcolor = input.color(color.black, "Yükselen Trend Etiket Yazı Rengi", group="Yükselen Trend Çizgi Ayarları")
up_labelcolor = input.color(color.orange, "Yükselen Trend Etiket Rengi", group="Yükselen Trend Çizgi Ayarları")

down_line = input.bool(true, "Düşen Trendleri Göster", group="Düşen Trend Çizgi Ayarları")
int tdown_numberOfLines = input.int(10, "Düşen Son Kaç Trend?", group="Düşen Trend Çizgi Ayarları", minval=1, maxval=20, step=1)
tdown_cizgicolor = input.color(color.rgb(243, 52, 131), "Düşen Trend Çizgi Rengi", group="Düşen Trend Çizgi Ayarları")
down_labeltextcolor = input.color(color.black, "Düşen Trend Etiket Yazı Rengi", group="Düşen Trend Çizgi Ayarları")
down_labelcolor = input.color(color.rgb(243, 52, 131), "Düşen Trend Etiket Rengi", group="Düşen Trend Çizgi Ayarları")
down_etiket = input.bool(false, "Düşen trend çizgi %'sini Göster", group="Düşen Trend Çizgi Ayarları")

// Kırılan trendler için girişler
show_broken_up_trends = input.bool(true, "Kırılan Yükselen Trendleri Göster", group="Kırılan Trend Çizgi Ayarları")
show_broken_down_trends = input.bool(true, "Kırılan Düşen Trendleri Göster", group="Kırılan Trend Çizgi Ayarları")
int broken_up_trends_count = input.int(10, "Kırılan Son Yükselen Kaç Trend?", minval=1, maxval=20, group="Kırılan Trend Çizgi Ayarları")
int broken_down_trends_count = input.int(10, "Kırılan Son Düşen Kaç Trend?", minval=1, maxval=20, group="Kırılan Trend Çizgi Ayarları")

// Çizgiler ve etiketler için diziler
var array<line> tup_lines = array.new_line()
var array<line> tdown_lines = array.new_line()
var array<label> up_label = array.new_label()
var array<label> down_label = array.new_label()

var array<line> broken_up_trends = array.new_line()
var array<line> broken_down_trends = array.new_line()

// Kırılan trend çizgilerini silme ve saklama fonksiyonu
f_delete_and_store_trend_line(line line_to_delete, bool is_uptrend) =>
    if is_uptrend
        broken_line = line.copy(line_to_delete)
        line.set_width(broken_line, 2)
        line.set_style(broken_line, line.style_dashed)
        array.unshift(broken_up_trends, broken_line)
        if array.size(broken_up_trends) > broken_up_trends_count
            line.delete(array.pop(broken_up_trends))
    else
        broken_line = line.copy(line_to_delete)
        line.set_width(broken_line, 2)
        line.set_style(broken_line, line.style_dashed)
        array.unshift(broken_down_trends, broken_line)
        if array.size(broken_down_trends) > broken_down_trends_count
            line.delete(array.pop(broken_down_trends))
    line.delete(line_to_delete)

// Yükselen trend çizgisi
kural = low[1] > high[3]
fark1 = ((low[1] * 100) / high[3]) - 100
kural2 = fark1 > altsiniryuzde and fark1 < ustsiniryuzde
if kural and kural2 and up_line
    newLine = line.new(bar_index - 3, high[3], bar_index - 1, low[1], color=tup_cizgicolor, width=2, style=line.style_solid, extend=extend.right)
    array.unshift(tup_lines, newLine)
    if array.size(tup_lines) > tup_numberOfLines
        line.delete(array.pop(tup_lines))

// Yükselen trend çizgisini kırılma kontrolü ve güncelleme
if array.size(tup_lines) > 0
    for i = array.size(tup_lines) - 1 to 0
        l = array.get(tup_lines, i)
        // Kırılma kontrolü 8 mumdan sonra sadece kapanış fiyatına bakılır
        if (bar_index - line.get_x1(l) > 4) and (close < line.get_price(l, bar_index))
            f_delete_and_store_trend_line(l, true)
            array.remove(tup_lines, i)
        // İlk 8 mum içinde güncelleme yapılır
        else if (bar_index - line.get_x1(l) <= 4)
            if low[1] < line.get_y2(l) and low[1] > line.get_y1(l)
                line.set_xy2(l, bar_index - 1, low[1])
                break

// Yükselen trend etiketi
if kural and kural2 and up_etiket
    fark = ((low[1] * 100) / high[3]) - 100
    newlabel = label.new(bar_index - 3, high[3], text="% " + str.tostring(fark, "#.##"), style=label.style_label_lower_right, color=up_labelcolor, textcolor=up_labeltextcolor)
    array.push(up_label, newlabel)
    if array.size(up_label) > tup_numberOfLines
        label.delete(array.shift(up_label))

// Düşen trend çizgisi
kuraldown = high[1] < low[3]
farkdown1 = math.abs(((high[1] * 100) / low[3]) - 100)
kuraldown2 = farkdown1 > altsiniryuzde and farkdown1 < ustsiniryuzde
if kuraldown and kuraldown2 and down_line
    newLine = line.new(bar_index - 3, low[3], bar_index - 1, high[1], color=tdown_cizgicolor, width=2, style=line.style_solid, extend=extend.right)
    array.unshift(tdown_lines, newLine)
    if array.size(tdown_lines) > tdown_numberOfLines
        line.delete(array.pop(tdown_lines))

// Düşen trend çizgisini kırılma kontrolü ve güncelleme
if array.size(tdown_lines) > 0
    for i = array.size(tdown_lines) - 1 to 0
        l = array.get(tdown_lines, i)
        // Kırılma kontrolü 8 mumdan sonra sadece kapanış fiyatına bakılır
        if (bar_index - line.get_x1(l) > 7) and (close > line.get_price(l, bar_index))
            f_delete_and_store_trend_line(l, false)
            array.remove(tdown_lines, i)
        // İlk 8 mum içinde güncelleme yapılır
        else if (bar_index - line.get_x1(l) <= 7)
            if high[1] > line.get_y2(l) and high[1] < line.get_y1(l)
                line.set_xy2(l, bar_index - 1, high[1])
                break

// Düşen trend etiketi
if kuraldown and kuraldown2 and down_etiket
    farkdown = ((high[1] * 100) / low[3]) - 100
    newlabel = label.new(bar_index - 3, low[3], text="% " + str.tostring(farkdown, "#.##"), style=label.style_label_upper_right, color=down_labelcolor, textcolor=down_labeltextcolor)
    array.push(down_label, newlabel)
    if array.size(down_label) > tdown_numberOfLines
        label.delete(array.shift(down_label))

// Kırılan trendlerin gösterimi
if show_broken_up_trends
    if array.size(broken_up_trends) > 0
        for i = 0 to array.size(broken_up_trends) - 1
            line.set_style(array.get(broken_up_trends, i), line.style_dashed)
else
    if array.size(broken_up_trends) > 0
        for i = 0 to array.size(broken_up_trends) - 1
            line.delete(array.get(broken_up_trends, i))

if show_broken_down_trends
    if array.size(broken_down_trends) > 0
        for i = 0 to array.size(broken_down_trends) - 1
            line.set_style(array.get(broken_down_trends, i), line.style_dashed)
else
    if array.size(broken_down_trends) > 0
        for i = 0 to array.size(broken_down_trends) - 1
            line.delete(array.get(broken_down_trends, i))

// Mevcut fiyatın trend çizgisine olan uzaklığı ve trend çizgisinin fiyatı sadece açık olan mumda göster
plot_distance_to_trend() =>
    if barstate.islast
        if array.size(tup_lines) > 0
            l = array.get(tup_lines, 0)
            trend_price = line.get_price(l, bar_index)
            distance = close - trend_price
            label.new(bar_index, trend_price, text="Destek: " + str.tostring(trend_price, "#.##") + "\nUzaklık: " + str.tostring(distance, "#.##"), style=label.style_label_up, color=up_labelcolor, textcolor=up_labeltextcolor)

        if array.size(tdown_lines) > 0
            l = array.get(tdown_lines, 0)
            trend_price = line.get_price(l, bar_index)
            distance = close - trend_price
            label.new(bar_index, trend_price, text="Direnç: " + str.tostring(trend_price, "#.##") + "\nUzaklık: " + str.tostring(distance, "#.##"), style=label.style_label_down, color=down_labelcolor, textcolor=down_labeltextcolor)
            
// Trend etiketlerini göster
plot_distance_to_trend()
